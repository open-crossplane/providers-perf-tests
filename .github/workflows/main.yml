name: Deploy EKS Cluster

on:
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      aws_session_token:
        description: 'AWS Session Token'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install awscli

    - name: Configure AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ github.event.inputs.aws_access_key_id }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ github.event.inputs.aws_secret_access_key }}" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=${{ github.event.inputs.aws_session_token }}" >> $GITHUB_ENV
        echo "${{ github.event.inputs.aws_access_key_id }}" | gh-mask
        echo "${{ github.event.inputs.aws_secret_access_key }}" | gh-mask
        echo "${{ github.event.inputs.aws_session_token }}" | gh-mask
        aws configure set aws_access_key_id ${{ github.event.inputs.aws_access_key_id }}
        aws configure set aws_secret_access_key ${{ github.event.inputs.aws_secret_access_key }}
        aws configure set aws_session_token ${{ github.event.inputs.aws_session_token }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Install eksctl and just
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        curl --silent --location https://install.just.systems/install.sh | sudo bash

    - name: Create EKS Cluster
      run: |
        cat > cluster.yaml << EOF
        apiVersion: eksctl.io/v1alpha5
        kind: ClusterConfig

        metadata:
          name: of-provider-perf-testing
          region: eu-central-1
          version: "1.25"

        nodeGroups:
          - name: ng-1
            instanceType: c5.4xlarge
            desiredCapacity: 1
        EOF
        just setup_eks

        # delete cluster at the eend no matter what
        # think of cleaning any dangling resources in the target cloud providers
        # maybe using aws nuke to clearnup all periodically: https://github.com/rebuy-de/aws-nuke
        # https://github.com/upbound/upbound-api/blob/main/.github/workflows/ci.yml#L17-L27
        # more credentials would have to be supplied
        # obtain IAM from extensions
        # https://vault-bxwvfvkdkp.upbound.io/ui/vault/secrets/secret/list/controlplanes/

